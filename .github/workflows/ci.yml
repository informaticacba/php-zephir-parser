# This file is part of the Zephir Parser.
#
# (c) Zephir Team <team@zephir-lang.com>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: Zephir Parser CI

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 02:00 runs only on default branch
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:

env:
  RE2C_VERSION: 2.2
  PHP_SDK_VERSION: 2.2.0
  PHP_DEVPACK: C:\tools\php-devpack
  PHP_SDK_PATH: C:\tools\php-sdk

jobs:
  builds:
    name: PHP-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}-${{ matrix.arch }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1' ]
        ts: [ 'nts' ]
        arch: [ 'x64' ]

        name:
          - ubuntu-gcc
          - macos-clang

        # matrix names should be in next format:
        #     {php}-{ts}-{os.name}-{compiler}-{arch}
        include:
          # Linux
          - { name: ubuntu-gcc, os: ubuntu-18.04, compiler: gcc }
          # macOS
          - { name: macos-clang, os: macos-10.15, compiler: clang }
          # Windows
          - { php: '7.0', ts: 'nts', arch: 'x64', name: 'windows2019-vc14', os: 'windows-2019', compiler: 'vc14' }
          - { php: '7.1', ts: 'nts', arch: 'x64', name: 'windows2019-vc14', os: 'windows-2019', compiler: 'vc14' }
          - { php: '7.2', ts: 'nts', arch: 'x64', name: 'windows2019-vc15', os: 'windows-2019', compiler: 'vc15' }
          - { php: '7.3', ts: 'nts', arch: 'x64', name: 'windows2019-vc15', os: 'windows-2019', compiler: 'vc15' }
          - { php: '7.4', ts: 'nts', arch: 'x64', name: 'windows2019-vc15', os: 'windows-2019', compiler: 'vc15' }
          - { php: '8.0', ts: 'nts', arch: 'x64', name: 'windows2019-vs16', os: 'windows-2019', compiler: 'vs16' }
          - { php: '8.1', ts: 'nts', arch: 'x64', name: 'windows2019-vs16', os: 'windows-2019', compiler: 'vs16' }

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php }}'
          coverage: none
        env:
          PHPTS: ${{ matrix.ts }}

      - name: Build Zephir Parser Extension (Linux)
        uses: ./.github/actions/build-linux
        if: runner.os == 'Linux'

      - name: Build Zephir Parser Extension (macOS)
        uses: ./.github/actions/build-mac
        if: runner.os == 'macOS'

      - name: Build Zephir Parser Extension (Windows)
        uses: ./.github/actions/build-win
        if: runner.os == 'Windows'
        with:
          php_version: ${{ matrix.php }}
          ts: ${{ matrix.ts }}
          msvc: ${{ matrix.compiler }}
          arch: ${{ matrix.arch }}
        env:
          CACHE_DIR: 'C:\Downloads'
          TOOLS_DIR: 'C:\tools'

      - name: Setup Tests
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            echo "TEST_PHP_EXECUTABLE=C:\tools\php\php.exe" >> $GITHUB_ENV
          else
            echo "TEST_PHP_EXECUTABLE=$(which php)" >> $GITHUB_ENV
          fi

      - name: Run Tests for Zephir Parser
        shell: bash
        run: |
          php --ri zephir_parser
          php run-tests.php -q; exit $?
        env:
          NO_INTERACTION: 1
          REPORT_EXIT_STATUS: 1

      - name: Collect Build Artifacts
        shell: bash
        run: |
          echo "::group::Creating ZIP with Zephir Parser extension"
          if [ "${{ runner.os }}" = "Windows" ]; then
            EXTENSION="$(find ./x64 -type f -name 'php_zephir_parser.dll')"
          else
            EXTENSION="$(find ./modules -type f -name 'zephir_parser.so')"
          fi

          zip -rvj zephir-parser-php-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}-${{ matrix.compiler }}-${{ matrix.arch }}.zip \
          $EXTENSION VERSION LICENSE CREDITS NO_WARRANTY CHANGELOG.md
          echo "::endgroup::"

      - name: Upload Zephir Parser
        uses: actions/upload-artifact@v2
        with:
          name: zephir-parser-php-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}-${{ matrix.compiler }}-${{ matrix.arch }}.zip
          path: |
            ${{ github.workspace }}/zephir-parser-*.zip

  pecl:
    name: Build PECL package
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: pecl

      - name: Install System Dependencies
        run: |
          sudo apt-get update --quiet --yes 1>/dev/null
          sudo apt-get install --no-install-recommends -q -y re2c

      - name: Build Zephir Parser
        run: |
          echo "::group::Run phpize"
          phpize
          echo "::endgroup::"

          echo "::group::Run configure"
          ./configure \
              --enable-zephir-parser \
              --enable-zephir-parser-debug
          echo "::endgroup::"

          echo "::group::Compile"
          make -j$(getconf _NPROCESSORS_ONLN)
          echo "::endgroup::"

      - name: Prepare PECL package config
        shell: pwsh
        run: |
          echo "-- Replacing Release data"
          $Config = [xml](Get-Content ./package.xml)
          $Config.package.date = $(Get-Date -Format "yyyy-MM-dd")
          $Config.package.time = $(Get-Date -Format "HH:mm:ss")
          $Config.package.version.Item(1).release = $(Get-Content ./VERSION)
          $Config.package.version.Item(1).api = $Config.package.version.release

          echo "-- Parsing CHANGELOG"
          ./.ci/release-notes.sh ./CHANGELOG.md > ./release-notes.md
          $Config.package.notes = $(Get-Content ./release-notes.md -Encoding UTF8 -Raw)
          $Config.Save('./package.xml')

      - name: Create PECL package
        run: |
          pecl package
          zephir_parser_package="`ls | grep zephir_parser-*tgz`"
          mv $zephir_parser_package zephir_parser-pecl.tgz

      - name: Validate PECL Package
        run: |
          pecl package-validate zephir_parser-pecl.tgz
          pecl info zephir_parser-pecl.tgz

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: 'zephir_parser-pecl'
          path: zephir_parser-pecl.tgz

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    needs: [ builds, pecl ]
    name: Create Release
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Get the release version
        id: get-version
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Download Zephir Parser build artifacts
        id: download
        uses: actions/download-artifact@v2
        with:
          path: ./build-artifacts

      - name: Prepare Release assets
        run: |
          mkdir -p ./build-artifacts/release
          find ./build-artifacts -type f -name zephir-parser*.zip -exec cp {} ./build-artifacts/release/ ";"
          echo "-- Creating Release Notes"
          GITHUB_ACTIONS=false ./.ci/release-notes.sh ./CHANGELOG.md > ./build-artifacts/release/release-notes.md

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.get-version.outputs.version }}
          tag: ${{ steps.get-version.outputs.version }}
          bodyFile: "./build-artifacts/release/release-notes.md"
          allowUpdates: true
          artifacts: "./build-artifacts/release/*.zip"
          artifactContentType: application/octet-stream
