# This file is part of the Zephir Parser.
#
# (c) Zephir Team <team@zephir-lang.com>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: Zephir Parser CI

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 02:00 runs only on default branch
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:

env:
  RE2C_VERSION: 2.2
  PHP_SDK_VERSION: 2.2.0
  PHP_DEVPACK: C:\tools\php-devpack
  PHP_SDK_PATH: C:\tools\php-sdk
  EXTENSION_FILE: php_zephir_parser.dll

jobs:
  builds:
    name: build / PHP-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}-${{ matrix.arch }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # php: [ '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1' ]
        php: [ '7.0' ]
        ts: [ 'nts' ]
        arch: [ 'x64' ]

        name:
          - ubuntu-gcc
          - macos-clang

        # matrix names should be in next format:
        #     {php}-{ts}-{os.name}-{compiler}-{arch}
        include:
          # Linux
          - name: ubuntu-gcc
            os: ubuntu-18.04
            compiler: gcc
          # macOS
          - name: macos-clang
            os: macos-10.15
            compiler: clang

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php }}'
          coverage: none
        env:
          PHPTS: ${{ matrix.ts }}

      - name: Build Zephir Parser Extension (Linux)
        uses: ./.github/actions/build-linux
        if: runner.os == 'Linux'

      - name: Run Tests for Zephir Parser
        shell: bash
        run: |
          php -d extension=./modules/zephir_parser.so --ri zephir_parser
          NO_INTERACTION=1 REPORT_EXIT_STATUS=1 php run-tests.php -q

      - name: Prepare Build Artifacts
        working-directory: modules
        run: |
          echo "-- Creating ZIP with Zephir Parser extension"
          zip -rv zephir-parser-php-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}-${{ matrix.compiler }}-${{ matrix.arch }}.zip ./*.so

      - name: Upload Zephir Parser
        uses: actions/upload-artifact@v2
        with:
          name: zephir-parser-php-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}-${{ matrix.compiler }}-${{ matrix.arch }}.zip
          path: |
            ${{ github.workspace }}/modules/*.zip

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    needs: [ builds ]
    name: Create Release
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Get the release version
        id: get-version
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Download Zephir Parser build artifacts
        id: download
        uses: actions/download-artifact@v2
        with:
          path: ./build-artifacts

      - name: Prepare Release assets
        run: |
          mkdir -p ./build-artifacts/release
          find ./build-artifacts -type f -name zephir-parser*.zip -exec cp {} ./build-artifacts/release/ ";"
          echo "-- Creating Release Notes"
          GITHUB_ACTIONS=false ./.ci/release-notes.sh ./CHANGELOG.md > ./build-artifacts/release/release-notes.md

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.get-version.outputs.version }}
          tag: ${{ steps.get-version.outputs.version }}
          bodyFile: "./build-artifacts/release/release-notes.md"
          allowUpdates: true
          artifacts: "./build-artifacts/release/*.zip"
          artifactContentType: application/octet-stream
