name: Windows

on:
  push:
    branches-ignore:
      - 'wip-*'
    paths-ignore:
      - '*.md'

#  pull_request:
#    branches:
#      - master
#      - development

#  schedule:
#    - cron: '0 11 * * *'

env:
  PHP_SDK_VERSION: 2.2.0
  PHP_DEVPACK: C:\tools\php-devpack
  PHP_SDK_PATH: C:\tools\php-sdk

jobs:
  ci:
    strategy:
      fail-fast: false

      matrix:
        php: ['7.0', '7.1', '7.2', '7.3', '7.4', '8.0']
        arch: ['x86', 'x64']
        build_type: ['ts', 'nts']
        vc_num: [14, 15, 16]

        exclude:
          - php: '7.0'
            vc_num: 15
          - php: '7.0'
            vc_num: 16

          - php: '7.1'
            vc_num: 15
          - php: '7.1'
            vc_num: 16

          - php: '7.2'
            vc_num: 14
          - php: '7.2'
            vc_num: 16

          - php: '7.3'
            vc_num: 14
          - php: '7.3'
            vc_num: 16

          - php: '7.4'
            vc_num: 14
          - php: '7.4'
            vc_num: 16

          - php: '8.0'
            vc_num: 14
          - php: '8.0'
            vc_num: 15

    name: "Windows ${{ matrix.arch }} VC${{ matrix.vc_num }} and PHP ${{ matrix.php }}-${{ matrix.build_type }}"
    runs-on: windows-2016

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
        env:
          PHPTS: ${{ matrix.build_type }}

      - name: Set Environment Variables
        run: |
          Write-Output "PHP_VERSION=$(php -r 'echo phpversion();')" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "PHP_MINOR=${{ matrix.php }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "TEST_PHP_EXECUTABLE=${env:PHPROOT}\php.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "BUILD_TYPE=${{ matrix.build_type }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "VC_VERSION=${{ matrix.vc_num }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "PHP_ARCH=${{ matrix.arch }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "BUILD_VERSION=${GITHUB_RUN_NUMBER}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup Common Environmet
        run: |
          Import-Module .\.ci\win-ci-tools.psm1
          SetupCommonEnvironment

      - name: Install PHP SDK Binary Tools
        run: |
          Import-Module .\.ci\win-ci-tools.psm1
          InstallPhpSdk

      - name: Install PHP Dev pack
        run: |
          Import-Module .\.ci\win-ci-tools.psm1
          InstallPhpDevPack

      - name: Getting Details About Installed PHP
        run: Get-Php "${env:PHPROOT}"

      - name: Install CL
        uses: ilammy/msvc-dev-cmd@v1

      - name: Parse Zephir Parser (Lemon)
        shell: cmd
        run: |
          call C:\tools\php-sdk\bin\phpsdk_setvars.bat
          CD parser
          DEL zephir.c zephir.h parser.c scanner.c
          re2c -o scanner.c scanner.re
          lemon -s zephir.lemon
          ECHO #include ^<php.h^> > parser.c
          TYPE zephir.c >> parser.c
          TYPE base.c >> parser.c

      - name: Build Zephir Parser (phpize)
        shell: cmd
        run: |
          call C:\tools\php-sdk\phpsdk-vc${{ matrix.vc_num }}-${{ matrix.arch }}.bat
          call C:\tools\php-sdk\bin\phpsdk_setvars.bat
          call C:\tools\php-devpack\phpize.bat
          configure --with-prefix=C:\php --with-php-build=C:\php-devpack --disable-all --enable-zephir-parser=shared
          nmake 2> compile-errors.log 1> compile.log

      - run: dir ${env:GITHUB_WORKSPACE}\parser

      - name: Check errors
        if: always()
        run: |
          if (Test-Path -Path "${env:GITHUB_WORKSPACE}\parser\compile-errors.log") {
            Get-Content -Path "${env:GITHUB_WORKSPACE}\parser\compile-errors.log"
          }
          if (Test-Path -Path "${env:GITHUB_WORKSPACE}\parser\compile.log") {
            Get-Content -Path "${env:GITHUB_WORKSPACE}\parser\compile.log"
          }

      - run: |
          Import-Module .\.ci\win-ci-tools.psm1
          InitializeReleaseVars
          dir ${Env:RELEASE_PATH}

      - name: Enable Zephir Parser
        run: Enable-PhpExtension -Extension 'Zephir Parser' -Path "${env:RELEASE_PATH}"
